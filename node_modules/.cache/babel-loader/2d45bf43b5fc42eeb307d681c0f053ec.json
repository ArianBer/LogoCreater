{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport * as Yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().email(\"Please enter a valid email!\").required(\"Email is required\"),\n  password: Yup.string().min(6, \"Password should be more than 6 letters\").required(\"Password is required\")\n});\nexport const useLoginForm = () => {\n  _s();\n\n  return useForm({\n    mode: \"all\",\n    resolver: yupResolver(LoginSchema)\n  });\n};\n\n_s(useLoginForm, \"l2TzfQsFUe8HlTy4lV8JGy0oZ+4=\", false, function () {\n  return [useForm];\n});","map":{"version":3,"sources":["/Users/elmedinbrahimi/Desktop/LogoCreater/src/lib/hooks/form/useLoginForm.ts"],"names":["useForm","Yup","yupResolver","LoginSchema","object","shape","email","string","required","password","min","useLoginForm","mode","resolver"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAMA,MAAMC,WAAW,GAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;AACrCC,EAAAA,KAAK,EAAEL,GAAG,CAACM,MAAJ,GACJD,KADI,CACE,6BADF,EAEJE,QAFI,CAEK,mBAFL,CAD8B;AAIrCC,EAAAA,QAAQ,EAAER,GAAG,CAACM,MAAJ,GACPG,GADO,CACH,CADG,EACA,wCADA,EAEPF,QAFO,CAEE,sBAFF;AAJ2B,CAAnB,CAApB;AAQA,OAAO,MAAMG,YAAY,GAAG,MAAM;AAAA;;AAChC,SAAOX,OAAO,CAAc;AAC1BY,IAAAA,IAAI,EAAE,KADoB;AAE1BC,IAAAA,QAAQ,EAAEX,WAAW,CAACC,WAAD;AAFK,GAAd,CAAd;AAID,CALM;;GAAMQ,Y;UACJX,O","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport * as Yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nexport interface LoginFields {\n  email: string;\n  password: string;\n}\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"Please enter a valid email!\")\n    .required(\"Email is required\"),\n  password: Yup.string()\n    .min(6, \"Password should be more than 6 letters\")\n    .required(\"Password is required\"),\n});\nexport const useLoginForm = () => {\n  return useForm<LoginFields>({\n    mode: \"all\",\n    resolver: yupResolver(LoginSchema),\n  });\n};\n\nexport type LoginForm = ReturnType<typeof useLoginForm>;\n"]},"metadata":{},"sourceType":"module"}