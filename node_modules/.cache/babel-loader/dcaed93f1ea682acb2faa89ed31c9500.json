{"ast":null,"code":"var _jsxFileName = \"/Users/elmedinbrahimi/Desktop/LogoCreater/src/routes/Routes.tsx\";\nimport React from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport { PublicRoute } from \"./PublicRoute\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { Login } from \"../pages/Login/Login\";\nimport { Register } from \"../pages/Register/Register\";\nimport { ForgotPassword } from \"../pages/ForgotPassword/ForgotPassword\";\nimport { ResetPassword } from \"../pages/ResetPassword/ResetPassword\";\nimport { Profile } from \"../pages/Profile/Profile\";\nimport { Home } from \"../pages/Home/Home\";\nimport { Page404 } from \"../pages/Page404/Page404\";\nimport { RestrictedRoute } from \"./RestrictedRoute\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let RouteType;\n\n(function (RouteType) {\n  RouteType[RouteType[\"PUBLIC\"] = 0] = \"PUBLIC\";\n  RouteType[RouteType[\"PRIVATE\"] = 1] = \"PRIVATE\";\n  RouteType[RouteType[\"RESTRICTED\"] = 2] = \"RESTRICTED\";\n})(RouteType || (RouteType = {}));\n\nexport const AppRoutes = [// Restricted Routes\n{\n  type: RouteType.RESTRICTED,\n  exact: true,\n  path: \"login\",\n  component: Login\n}, {\n  type: RouteType.RESTRICTED,\n  exact: true,\n  path: \"register\",\n  component: Register\n}, {\n  type: RouteType.RESTRICTED,\n  exact: true,\n  path: \"forgot-password\",\n  component: ForgotPassword\n}, {\n  type: RouteType.RESTRICTED,\n  exact: true,\n  path: \"reset-password\",\n  component: ResetPassword\n}, // Private Routes\n{\n  type: RouteType.PRIVATE,\n  path: \"my-profile\",\n  component: Profile\n}, // Public Routes\n{\n  type: RouteType.PUBLIC,\n  exact: true,\n  path: \"/\",\n  component: Home\n}];\nexport const Routes = () => {\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [AppRoutes.map(r => {\n      const {\n        type,\n        path,\n        ...rest\n      } = r;\n\n      if (type === RouteType.PRIVATE) {\n        return /*#__PURE__*/_createElement(PrivateRoute, { ...rest,\n          key: `${r.path}`,\n          path: `/${r.path}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }\n        });\n      }\n\n      if (type === RouteType.RESTRICTED) {\n        return /*#__PURE__*/_createElement(RestrictedRoute, { ...rest,\n          key: `${r.path}`,\n          path: `/${r.path}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }\n        });\n      }\n\n      return /*#__PURE__*/_createElement(PublicRoute, { ...rest,\n        key: `${r.path}`,\n        path: `/${r.path}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 16\n        }\n      });\n    }), /*#__PURE__*/_jsxDEV(PublicRoute, {\n      component: Page404\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_c = Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["/Users/elmedinbrahimi/Desktop/LogoCreater/src/routes/Routes.tsx"],"names":["React","Switch","PublicRoute","PrivateRoute","Login","Register","ForgotPassword","ResetPassword","Profile","Home","Page404","RestrictedRoute","RouteType","AppRoutes","type","RESTRICTED","exact","path","component","PRIVATE","PUBLIC","Routes","map","r","rest"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { RouteProps, Switch } from \"react-router-dom\";\n\nimport { PublicRoute } from \"./PublicRoute\";\nimport { PrivateRoute } from \"./PrivateRoute\";\n\nimport { Login } from \"../pages/Login/Login\";\nimport { Register } from \"../pages/Register/Register\";\nimport { ForgotPassword } from \"../pages/ForgotPassword/ForgotPassword\";\nimport { ResetPassword } from \"../pages/ResetPassword/ResetPassword\";\nimport { Profile } from \"../pages/Profile/Profile\";\nimport { Home } from \"../pages/Home/Home\";\nimport { Page404 } from \"../pages/Page404/Page404\";\nimport { RestrictedRoute } from \"./RestrictedRoute\";\n\nexport enum RouteType {\n  PUBLIC,\n  PRIVATE,\n  RESTRICTED,\n}\ninterface AppRoute extends RouteProps {\n  type?: RouteType;\n}\nexport const AppRoutes: AppRoute[] = [\n  // Restricted Routes\n  {\n    type: RouteType.RESTRICTED,\n    exact: true,\n    path: \"login\",\n    component: Login,\n  },\n  {\n    type: RouteType.RESTRICTED,\n    exact: true,\n    path: \"register\",\n    component: Register,\n  },\n  {\n    type: RouteType.RESTRICTED,\n    exact: true,\n    path: \"forgot-password\",\n    component: ForgotPassword,\n  },\n  {\n    type: RouteType.RESTRICTED,\n    exact: true,\n    path: \"reset-password\",\n    component: ResetPassword,\n  },\n  // Private Routes\n  {\n    type: RouteType.PRIVATE,\n    path: \"my-profile\",\n    component: Profile,\n  },\n  // Public Routes\n  {\n    type: RouteType.PUBLIC,\n    exact: true,\n    path: \"/\",\n    component: Home,\n  },\n];\n\nexport const Routes = () => {\n  return (\n    <Switch>\n      {AppRoutes.map((r) => {\n        const { type, path, ...rest } = r;\n        if (type === RouteType.PRIVATE) {\n          return (\n            <PrivateRoute {...rest} key={`${r.path}`} path={`/${r.path}`} />\n          );\n        }\n        if (type === RouteType.RESTRICTED) {\n          return (\n            <RestrictedRoute {...rest} key={`${r.path}`} path={`/${r.path}`} />\n          );\n        }\n\n        return <PublicRoute {...rest} key={`${r.path}`} path={`/${r.path}`} />;\n      })}\n      <PublicRoute component={Page404} />\n    </Switch>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}