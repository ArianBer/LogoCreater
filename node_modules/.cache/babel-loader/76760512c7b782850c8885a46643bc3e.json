{"ast":null,"code":"var _jsxFileName = \"/Users/elmedinbrahimi/Desktop/LogoCreater/src/lib/context/ConfirmationContext/ConfirmationContextProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ConfirmationContext } from \"./ConfirmationContext\";\nimport ConfirmationModal from \"../../../components/ConfirmationModal/ConfirmationModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ConfirmationContextProvider(props) {\n  _s();\n\n  const defaultText = \"Are you sure?\";\n  const [state, setState] = useState({\n    text: defaultText,\n    isOpen: false,\n    onConfirm: () => {},\n    onCancel: () => {}\n  });\n\n  function confirm(txt) {\n    const text = txt || defaultText;\n    return new Promise((resolve, reject) => {\n      setState({\n        text: text,\n        isOpen: !state.isOpen,\n\n        onConfirm() {\n          setState({ ...state,\n            isOpen: false,\n            text: text\n          });\n          resolve(true);\n        },\n\n        onCancel() {\n          setState({ ...state,\n            isOpen: false,\n            text: text\n          });\n          reject(false);\n        }\n\n      });\n    });\n  }\n\n  const context = {\n    isOpen: state.isOpen,\n    confirm: confirm\n  };\n  return /*#__PURE__*/_jsxDEV(ConfirmationContext.Provider, {\n    value: context,\n    children: [/*#__PURE__*/_jsxDEV(ConfirmationModal, {\n      confirmationData: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConfirmationContextProvider, \"pE4i/n5lOQWHPgjMNA7uPlDPs+M=\");\n\n_c = ConfirmationContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmationContextProvider\");","map":{"version":3,"sources":["/Users/elmedinbrahimi/Desktop/LogoCreater/src/lib/context/ConfirmationContext/ConfirmationContextProvider.tsx"],"names":["React","useState","ConfirmationContext","ConfirmationModal","ConfirmationContextProvider","props","defaultText","state","setState","text","isOpen","onConfirm","onCancel","confirm","txt","Promise","resolve","reject","context","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,mBADF,QAGO,uBAHP;AAIA,OAAOC,iBAAP,MAA8B,yDAA9B;;AAaA,OAAO,SAASC,2BAAT,CAAqCC,KAArC,EAAmD;AAAA;;AACxD,QAAMC,WAAW,GAAG,eAApB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAQ;AACxCQ,IAAAA,IAAI,EAAEH,WADkC;AAExCI,IAAAA,MAAM,EAAE,KAFgC;AAGxCC,IAAAA,SAAS,EAAE,MAAM,CAAE,CAHqB;AAIxCC,IAAAA,QAAQ,EAAE,MAAM,CAAE;AAJsB,GAAR,CAAlC;;AAMA,WAASC,OAAT,CAAiBC,GAAjB,EAA+B;AAC7B,UAAML,IAAI,GAAGK,GAAG,IAAIR,WAApB;AACA,WAAO,IAAIS,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCT,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEA,IADC;AAEPC,QAAAA,MAAM,EAAE,CAACH,KAAK,CAACG,MAFR;;AAGPC,QAAAA,SAAS,GAAG;AACVH,UAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYG,YAAAA,MAAM,EAAE,KAApB;AAA2BD,YAAAA,IAAI,EAAEA;AAAjC,WAAD,CAAR;AACAO,UAAAA,OAAO,CAAC,IAAD,CAAP;AACD,SANM;;AAOPJ,QAAAA,QAAQ,GAAG;AACTJ,UAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYG,YAAAA,MAAM,EAAE,KAApB;AAA2BD,YAAAA,IAAI,EAAEA;AAAjC,WAAD,CAAR;AACAQ,UAAAA,MAAM,CAAC,KAAD,CAAN;AACD;;AAVM,OAAD,CAAR;AAYD,KAbM,CAAP;AAcD;;AACD,QAAMC,OAAgC,GAAG;AACvCR,IAAAA,MAAM,EAAEH,KAAK,CAACG,MADyB;AAEvCG,IAAAA,OAAO,EAAEA;AAF8B,GAAzC;AAIA,sBACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEK,OAArC;AAAA,4BACE,QAAC,iBAAD;AAAmB,MAAA,gBAAgB,EAAEX;AAArC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,KAAK,CAACc,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAnCef,2B;;KAAAA,2B","sourcesContent":["import React, { ReactNode, useState } from \"react\"\nimport {\n  ConfirmationContext,\n  ConfirmationContextType\n} from \"./ConfirmationContext\"\nimport ConfirmationModal from \"../../../components/ConfirmationModal/ConfirmationModal\"\n\ninterface Props {\n  children: ReactNode\n}\n\ninterface State {\n  text?: string\n  isOpen: boolean\n  onConfirm: () => void\n  onCancel: () => void\n}\n\nexport function ConfirmationContextProvider(props: Props) {\n  const defaultText = \"Are you sure?\"\n  const [state, setState] = useState<State>({\n    text: defaultText,\n    isOpen: false,\n    onConfirm: () => {},\n    onCancel: () => {}\n  })\n  function confirm(txt?: string) {\n    const text = txt || defaultText\n    return new Promise((resolve, reject) => {\n      setState({\n        text: text,\n        isOpen: !state.isOpen,\n        onConfirm() {\n          setState({ ...state, isOpen: false, text: text })\n          resolve(true)\n        },\n        onCancel() {\n          setState({ ...state, isOpen: false, text: text })\n          reject(false)\n        }\n      })\n    })\n  }\n  const context: ConfirmationContextType = {\n    isOpen: state.isOpen,\n    confirm: confirm\n  }\n  return (\n    <ConfirmationContext.Provider value={context}>\n      <ConfirmationModal confirmationData={state} />\n      {props.children}\n    </ConfirmationContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}