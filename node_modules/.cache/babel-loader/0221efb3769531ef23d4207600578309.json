{"ast":null,"code":"var _jsxFileName = \"/Users/elmedinbrahimi/Desktop/LogoCreater/src/components/user/RegisterForm/RegisterForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"components/shared/Button/Button\";\nimport Input from \"components/shared/Input/Input\";\nimport { useRegisterForm } from \"lib/hooks/form/useRegisterForm\";\nimport { useUserMutation } from \"lib/hooks/mutations/userMutations\";\nimport { toast } from \"react-toastify\"; //Components\n//Style\n\nimport \"./RegisterForm.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RegisterForm = () => {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isValid\n    }\n  } = useRegisterForm();\n  const {\n    mutate,\n    isLoading\n  } = useUserMutation(\"register\");\n\n  const onSubmit = async data => {\n    try {\n      await mutate(data, {\n        onSuccess: res => console.log(res),\n        onError: e => {\n          toast.error(e.response.data.error);\n        }\n      });\n    } catch (e) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"email\",\n      name: \"email\",\n      label: \"email\",\n      type: \"email\",\n      placeholder: \"Email Address\",\n      register: register,\n      error: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"email\",\n      name: \"email\",\n      label: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      register: register,\n      error: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      loading: isLoading,\n      disabled: isValid && isLoading,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"roP1mN78utrTJQBmnTXRquoPm3Y=\", false, function () {\n  return [useRegisterForm, useUserMutation];\n});\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/elmedinbrahimi/Desktop/LogoCreater/src/components/user/RegisterForm/RegisterForm.tsx"],"names":["Button","Input","useRegisterForm","useUserMutation","toast","RegisterForm","register","handleSubmit","formState","errors","isValid","mutate","isLoading","onSubmit","data","onSuccess","res","console","log","onError","e","error","response","email","message","password"],"mappings":";;;AACA,SAASA,MAAT,QAAuB,iCAAvB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,eAAT,QAAgC,mCAAhC;AAEA,SAASC,KAAT,QAAsB,gBAAtB,C,CAEA;AAEA;;AACA,OAAO,qBAAP;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAAA;;AAChC,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV;AAHP,MAIFR,eAAe,EAJnB;AAKA,QAAM;AAAES,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwBT,eAAe,CAAC,UAAD,CAA7C;;AAEA,QAAMU,QAAsC,GAAG,MAAOC,IAAP,IAAgB;AAC7D,QAAI;AACF,YAAMH,MAAM,CAACG,IAAD,EAAO;AACjBC,QAAAA,SAAS,EAAGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CADH;AAEjBG,QAAAA,OAAO,EAAGC,CAAD,IAAY;AACnBhB,UAAAA,KAAK,CAACiB,KAAN,CAAYD,CAAC,CAACE,QAAF,CAAWR,IAAX,CAAgBO,KAA5B;AACD;AAJgB,OAAP,CAAZ;AAMD,KAPD,CAOE,OAAOD,CAAP,EAAU,CAAE;AACf,GATD;;AAWA,sBACE;AAAM,IAAA,QAAQ,EAAEb,YAAY,CAACM,QAAD,CAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,WAAW,EAAC,eALd;AAME,MAAA,QAAQ,EAAEP,QANZ;AAOE,MAAA,KAAK,mBAAEG,MAAM,CAACc,KAAT,kDAAE,cAAcC;AAPvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE,QAAC,KAAD;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,WAAW,EAAC,UALd;AAME,MAAA,QAAQ,EAAElB,QANZ;AAOE,MAAA,KAAK,sBAAEG,MAAM,CAACgB,QAAT,qDAAE,iBAAiBD;AAP1B;AAAA;AAAA;AAAA;AAAA,YAXF,eAqBE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEZ,SAA/B;AAA0C,MAAA,QAAQ,EAAEF,OAAO,IAAIE,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA9CM;;GAAMP,Y;UAKPH,e,EAC0BC,e;;;KANnBE,Y","sourcesContent":["import { RegisterInput } from \"api/User\";\nimport { Button } from \"components/shared/Button/Button\";\nimport Input from \"components/shared/Input/Input\";\nimport { useRegisterForm } from \"lib/hooks/form/useRegisterForm\";\nimport { useUserMutation } from \"lib/hooks/mutations/userMutations\";\nimport { SubmitHandler } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\n\n//Components\n\n//Style\nimport \"./RegisterForm.scss\";\n\nexport const RegisterForm = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isValid },\n  } = useRegisterForm();\n  const { mutate, isLoading } = useUserMutation(\"register\");\n\n  const onSubmit: SubmitHandler<RegisterInput> = async (data) => {\n    try {\n      await mutate(data, {\n        onSuccess: (res) => console.log(res),\n        onError: (e: any) => {\n          toast.error(e.response.data.error);\n        },\n      });\n    } catch (e) {}\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <h2>Login</h2>\n      <Input\n        id=\"email\"\n        name=\"email\"\n        label=\"email\"\n        type=\"email\"\n        placeholder=\"Email Address\"\n        register={register}\n        error={errors.email?.message}\n      />\n      <Input\n        id=\"email\"\n        name=\"email\"\n        label=\"password\"\n        type=\"password\"\n        placeholder=\"Password\"\n        register={register}\n        error={errors.password?.message}\n      />\n\n      <Button type=\"submit\" loading={isLoading} disabled={isValid && isLoading}>\n        Login\n      </Button>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}