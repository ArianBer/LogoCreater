{"ast":null,"code":"var _jsxFileName = \"/Users/elmedinbrahimi/Desktop/LogoCreater/src/lib/context/AuthContext/AuthContextProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport localforage from \"localforage\";\nimport { AuthContext } from \"./AuthContext\";\nimport * as API from \"../../../api/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LOCAL_STORAGE_KEY = \"CULTURE\";\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(undefined);\n  const [error, setError] = useState();\n  useEffect(() => {\n    authenticate();\n  }, []);\n\n  const authenticate = async () => {\n    const userStorageDetails = await localforage.getItem(LOCAL_STORAGE_KEY);\n    axios.defaults.headers.common.Authorization = `Bearer ${userStorageDetails}`;\n\n    if (!userStorageDetails) {\n      setLoading(false);\n      setUser(undefined);\n      return;\n    }\n\n    try {\n      const res = await API.getUserDetails();\n      setUser(res);\n    } catch (err) {\n      setError(err);\n      localforage.removeItem(LOCAL_STORAGE_KEY);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = user => {\n    setUser(user);\n    axios.defaults.headers.common.Authorization = `Bearer ${user.token}`;\n    localforage.setItem(LOCAL_STORAGE_KEY, user.token);\n  };\n\n  const logout = async () => {\n    setUser(undefined);\n    localforage.removeItem(LOCAL_STORAGE_KEY);\n  }; // if (loading) return <LoadingScreen />;\n\n\n  const context = {\n    isAuthenticated: user !== undefined,\n    isLoading: loading,\n    error: error,\n    user: user,\n    login: login,\n    logout: logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"GmkdcVDduiXFBEhaVkR3/uXiZjs=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/elmedinbrahimi/Desktop/LogoCreater/src/lib/context/AuthContext/AuthContextProvider.tsx"],"names":["React","useEffect","useState","axios","localforage","AuthContext","API","LOCAL_STORAGE_KEY","AuthContextProvider","props","loading","setLoading","user","setUser","undefined","error","setError","authenticate","userStorageDetails","getItem","defaults","headers","common","Authorization","res","getUserDetails","err","removeItem","login","token","setItem","logout","context","isAuthenticated","isLoading","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAA0BC,WAA1B,QAA6C,eAA7C;AACA,OAAO,KAAKC,GAAZ,MAAqB,kBAArB;;AAMA,OAAO,MAAMC,iBAAiB,GAAG,SAA1B;AAEP,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAqC;AAAA;;AACtE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAuBY,SAAvB,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,YAAY,GAAG,YAAY;AAC/B,UAAMC,kBAAkB,GAAI,MAAMd,WAAW,CAACe,OAAZ,CAChCZ,iBADgC,CAAlC;AAGAJ,IAAAA,KAAK,CAACiB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,GAA+C,UAASL,kBAAmB,EAA3E;;AACA,QAAI,CAACA,kBAAL,EAAyB;AACvBP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,OAAO,CAACC,SAAD,CAAP;AACA;AACD;;AAED,QAAI;AACF,YAAMU,GAAG,GAAG,MAAMlB,GAAG,CAACmB,cAAJ,EAAlB;AACAZ,MAAAA,OAAO,CAACW,GAAD,CAAP;AACD,KAHD,CAGE,OAAOE,GAAP,EAAiB;AACjBV,MAAAA,QAAQ,CAACU,GAAD,CAAR;AACAtB,MAAAA,WAAW,CAACuB,UAAZ,CAAuBpB,iBAAvB;AACD,KAND,SAMU;AACRI,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GApBD;;AAsBA,QAAMiB,KAAK,GAAIhB,IAAD,IAAoB;AAChCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAT,IAAAA,KAAK,CAACiB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,GAA+C,UAASX,IAAI,CAACiB,KAAM,EAAnE;AACAzB,IAAAA,WAAW,CAAC0B,OAAZ,CAAoBvB,iBAApB,EAAuCK,IAAI,CAACiB,KAA5C;AACD,GAJD;;AAMA,QAAME,MAAM,GAAG,YAAY;AACzBlB,IAAAA,OAAO,CAACC,SAAD,CAAP;AACAV,IAAAA,WAAW,CAACuB,UAAZ,CAAuBpB,iBAAvB;AACD,GAHD,CArCsE,CA0CtE;;;AAEA,QAAMyB,OAAwB,GAAG;AAC/BC,IAAAA,eAAe,EAAErB,IAAI,KAAKE,SADK;AAE/BoB,IAAAA,SAAS,EAAExB,OAFoB;AAG/BK,IAAAA,KAAK,EAAEA,KAHwB;AAI/BH,IAAAA,IAAI,EAAEA,IAJyB;AAK/BgB,IAAAA,KAAK,EAAEA,KALwB;AAM/BG,IAAAA,MAAM,EAAEA;AANuB,GAAjC;AASA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,OAA7B;AAAA,cACGvB,KAAK,CAAC0B;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1DM;;GAAM3B,mB;;KAAAA,mB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport localforage from \"localforage\";\nimport { AuthContextType, AuthContext } from \"./AuthContext\";\nimport * as API from \"../../../api/Api\";\n\ninterface AuthContextProviderProps {\n  children: React.ReactNode | null;\n}\n\nexport const LOCAL_STORAGE_KEY = \"CULTURE\";\n\nexport const AuthContextProvider = (props: AuthContextProviderProps) => {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState<API.User | undefined>(undefined);\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    authenticate();\n  }, []);\n\n  const authenticate = async () => {\n    const userStorageDetails = (await localforage.getItem(\n      LOCAL_STORAGE_KEY\n    )) as string;\n    axios.defaults.headers.common.Authorization = `Bearer ${userStorageDetails}`;\n    if (!userStorageDetails) {\n      setLoading(false);\n      setUser(undefined);\n      return;\n    }\n\n    try {\n      const res = await API.getUserDetails();\n      setUser(res);\n    } catch (err: any) {\n      setError(err);\n      localforage.removeItem(LOCAL_STORAGE_KEY);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = (user: API.User) => {\n    setUser(user);\n    axios.defaults.headers.common.Authorization = `Bearer ${user.token}`;\n    localforage.setItem(LOCAL_STORAGE_KEY, user.token);\n  };\n\n  const logout = async () => {\n    setUser(undefined);\n    localforage.removeItem(LOCAL_STORAGE_KEY);\n  };\n\n  // if (loading) return <LoadingScreen />;\n\n  const context: AuthContextType = {\n    isAuthenticated: user !== undefined,\n    isLoading: loading,\n    error: error,\n    user: user,\n    login: login,\n    logout: logout,\n  };\n\n  return (\n    <AuthContext.Provider value={context}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}